apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: default
data:
  nginx.conf: |
          {{- range .Values.ingress.hosts }}
        server {
            listen                               80; #443 ssl http2;
            listen                               [::]:80; #443 ssl http2;
            server_name                          {{.host}};
            root                                 /var/www/example.com/public;

            # SSL
            # ssl_certificate                      /etc/letsencrypt/live/example.com/fullchain.pem;
            # ssl_certificate_key                  /etc/letsencrypt/live/example.com/privkey.pem;
            # ssl_trusted_certificate              /etc/letsencrypt/live/example.com/chain.pem;

            # security headers
            add_header X-XSS-Protection          "1; mode=block" always;
            add_header X-Content-Type-Options    "nosniff" always;
            add_header Referrer-Policy           "no-referrer-when-downgrade" always;
            add_header Content-Security-Policy   "default-src 'self' http: https: ws: wss: data: blob: 'unsafe-inline'; frame-ancestors 'self';" always;
            add_header Permissions-Policy        "interest-cohort=()" always;
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

            # . files
            location ~ /\.(?!well-known) {
                deny all;
            }

            # logging
            # access_log /var/log/nginx/access.log combined buffer=512k flush=1m;
            # error_log  /var/log/nginx/error.log warn;

            # reverse proxy
            location / {
                proxy_pass                         {{ .backend }};
                proxy_set_header Host              $host;
                proxy_http_version                 1.1;
                proxy_cache_bypass                 $http_upgrade;

                # Proxy SSL
                proxy_ssl_server_name              on;

                # Proxy headers
                # proxy_set_header Upgrade           $http_upgrade;
                # proxy_set_header X-Real-IP         $remote_addr;
                # proxy_set_header Forwarded         $proxy_add_forwarded;
                # proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header X-Forwarded-Host  $host;
                proxy_set_header X-Forwarded-Port  $server_port;

                # Proxy timeouts
                proxy_connect_timeout              60s;
                proxy_send_timeout                 60s;
                proxy_read_timeout                 60s;
            }

            # favicon.ico
            location = /favicon.ico {
                log_not_found off;
            }

            # robots.txt
            location = /robots.txt {
                log_not_found off;
            }

            # assets, media
            location ~* \.(?:css(\.map)?|js(\.map)?|jpe?g|png|gif|ico|cur|heic|webp|tiff?|mp3|m4a|aac|ogg|midi?|wav|mp4|mov|webm|mpe?g|avi|ogv|flv|wmv)$ {
                expires 7d;
            }

            # svg, fonts
            location ~* \.(?:svgz?|ttf|ttc|otf|eot|woff2?)$ {
                add_header Access-Control-Allow-Origin "*";
                expires    7d;
            }

            # gzip
            gzip            on;
            gzip_vary       on;
            gzip_proxied    any;
            gzip_comp_level 6;
            gzip_types      text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;
        }

      {{- end }}